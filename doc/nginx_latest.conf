user root;

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 443 ssl;
        server_name assas.scc.kit.edu;

        # SSL certificate and private key
        ssl_certificate /etc/letsencrypt/live/assas.scc.kit.edu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/assas.scc.kit.edu/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        location /.well-known/acme-challenge/ {
            root /var/www/html;
            allow all;
        }

        location / {
            proxy_pass http://unix:/run/assas_app/assas_app.sock;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        location /test {
            proxy_pass http://unix:/run/assas_app/assas_app_test.sock;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }
        #location /test {
        #    proxy_pass http://0.0.0.0:5000;
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header X-Forwarded-Proto $scheme;
        #}
    }

    server {
        listen 80;
        server_name assas.scc.kit.edu;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }
}
